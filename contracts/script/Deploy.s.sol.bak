// SPDX-License-Identifier: MIT
pragma solidity ^0.8.24;

import {Script} from "forge-std/Script.sol";
import {console2 as console} from "forge-std/console2.sol";
import {EscrowOrderBook} from "../src/EscrowOrderBook.sol";
import {ProjectRegistry} from "../src/ProjectRegistry.sol";
import {MockUSDC} from "../src/mocks/MockUSDC.sol";

contract Deploy is Script {
    function run() external {
        address stable = vm.envOr("STABLE_ADDRESS", address(0));
        uint256 deployerKey = vm.envUint("PRIVATE_KEY");

        vm.startBroadcast(deployerKey);
        
        // Deploy MockUSDC if needed
        if (stable == address(0)) {
            MockUSDC mock = new MockUSDC();
            stable = address(mock);
            mock.mint(vm.addr(deployerKey), 10_000_000 * 1e6);
            console.log("Deployed MockUSDC:", stable);
        }
        
        // Deploy EscrowOrderBook
        EscrowOrderBook book = new EscrowOrderBook(stable);
        console.log("EscrowOrderBook:", address(book));
        
        // Deploy ProjectRegistry
        ProjectRegistry registry = new ProjectRegistry();
        console.log("ProjectRegistry:", address(registry));
        
        // Add initial projects with metadata
        registry.addProject(
            "lighter",
            "Lighter",
            address(0x000000000000000000000000000000001197471E),
            "Points",
            "https://twitter.com/lighter",
            "https://lighter.xyz",
            "A decentralized orderbook DEX with advanced trading features"
        );
        
        registry.addProject(
            "extended",
            "Extended",
            address(0x00000000000000000000000000000E7174DE4D),
            "Tokens",
            "https://twitter.com/extended",
            "https://extended.io",
            "Next-generation DeFi protocol for cross-chain liquidity"
        );
        
        registry.addProject(
            "pacifica",
            "Pacifica",
            address(0x00000000000000000000000000000fAC1f1cA000),
            "Points",
            "https://twitter.com/pacifica",
            "https://pacifica.network",
            "L2 scaling solution focused on gaming and NFTs"
        );
        
        registry.addProject(
            "variational",
            "Variational",
            address(0x000000000000000000000000000A71A71074A1),
            "Tokens",
            "https://twitter.com/variational",
            "https://variational.finance",
            "AI-powered yield optimization protocol"
        );
        
        console.log("Added 4 initial projects to registry");
        
        vm.stopBroadcast();
    }
}
