// SPDX-License-Identifier: MIT
pragma solidity ^0.8.24;

import "forge-std/Script.sol";
import "../src/ProjectRegistry.sol";

contract ActivateAllProjectsScript is Script {
    function run() external {
        uint256 deployerPrivateKey = vm.envUint("PRIVATE_KEY");
        address registryAddress = vm.envAddress("REGISTRY");
        
        vm.startBroadcast(deployerPrivateKey);
        
        ProjectRegistry registry = ProjectRegistry(registryAddress);
        
        console2.log("Registry:", registryAddress);
        console2.log("\nActivating all projects...\n");
        
        // List of known projects
        string[4] memory slugs = ["lighter", "extended", "pacifica", "variational"];
        
        for (uint i = 0; i < slugs.length; i++) {
            try registry.getProject(slugs[i]) returns (
                string memory name,
                address tokenAddress,
                string memory assetType,
                bool active,
                uint64 addedAt,
                string memory twitterUrl,
                string memory websiteUrl,
                string memory description,
                string memory logoUrl
            ) {
                console2.log("Project:", slugs[i]);
                console2.log("  Name:", name);
                console2.log("  Active:", active);
                
                if (!active) {
                    console2.log("  -> Activating...");
                    registry.setProjectStatus(slugs[i], true);
                    console2.log("  -> Activated!");
                } else {
                    console2.log("  -> Already active");
                }
                console2.log("");
            } catch {
                console2.log("Project not found:", slugs[i]);
                console2.log("");
            }
        }
        
        vm.stopBroadcast();
        
        console2.log("Done! Refresh the app page.");
    }
}

